plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.andre'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
//	implementation 'org.apache.kafka:kafka-streams'
//	implementation 'org.springframework.kafka:spring-kafka'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
//	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-websocket:3.4.2'
	implementation 'org.json:json:20250107'
	implementation 'mysql:mysql-connector-java:8.0.33'
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc:3.4.3'
	implementation 'org.hibernate.orm:hibernate-core:6.5.2.Final'

	implementation 'org.seleniumhq.selenium:selenium-java:2.41.0'
	implementation 'com.cohere:cohere-java:+'

	// AWS DynamoDB
//	implementation 'org.springframework.data:spring-data-commons:3.4.2'
//	implementation 'software.amazon.awssdk:dynamodb:2.30.6'
//	implementation 'com.github.derjust:spring-data-dynamodb:5.0.4'
}

tasks.named('test') {
	useJUnitPlatform()
}
